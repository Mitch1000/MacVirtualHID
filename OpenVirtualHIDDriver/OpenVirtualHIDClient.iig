/*
See LICENSE folder for this sampleâ€™s licensing information.

Abstract:
The IOKit Interface Generator file that declares the driver's methods.
*/

#ifndef OpenVirtualHIDClient_h
#define OpenVirtualHIDClient_h

#include <Availability.h>
#include <DriverKit/IOUserClient.iig>
#include <DriverKit/IOTimerDispatchSource.iig>


class OpenVirtualHIDClient: public IOUserClient
{
protected:
  kern_return_t UpdateDeviceInputs(IOUserClientMethodArguments* arguments) LOCALONLY;
  kern_return_t DeviceReadyCheck(IOUserClientMethodArguments* arguments) LOCALONLY;
  kern_return_t CreateDevice(IOUserClientMethodArguments* arguments) LOCALONLY;
public:
    virtual bool init() override;
    virtual void free() override;

    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;

    virtual uint32_t getKeyboardVendorId(void);
    virtual uint32_t getKeyboardProductId(void);
    virtual kern_return_t ExternalMethod(uint64_t selector, IOUserClientMethodArguments* arguments, const IOUserClientMethodDispatch* dispatch, OSObject* target, void* reference) override;
//    virtual kern_return_t updateDevice(IOUserClientMethodArguments* arguments, const char* baseName);
};
    
#endif /* OpenVirtualHIDClient_h */

